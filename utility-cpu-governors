#!/bin/bash

# superuser ////////////////////////////////////////////////////////////////////

if [[ $(id -u -n) = "root" ]]
then
	if [ -z "${SUDO:-$HOME}" ]
	then
		SUDO_HOME=/root
	else
		SUDO_HOME="${SUDO:-$HOME}"
	fi

	USER="${SUDO_USER}"
	USER_HOME=/home/"${USER}"
else
	# set prompt

	export SUDO_PROMPT="[ $(tput setaf 3)${USER}$(tput sgr 0) ] >_ ? "

	# restart as superuser

	exec sudo bash "${0}" "${@}"
fi

# dependencies /////////////////////////////////////////////////////////////////

if [[ -z $(command -v frobulator) ]]
then
	if [[ -z $(command -v curl) ]]
	then
		yes | apt-get install curl
	fi

	curl -s -L get.frbltr.app > /usr/bin/frobulator

	chmod +x /usr/bin/frobulator
fi

. /usr/bin/frobulator

# script ///////////////////////////////////////////////////////////////////////

script=$(basename -- "${BASH_SOURCE[0]}")

# version //////////////////////////////////////////////////////////////////////

version="09-23-2022"

# usage ////////////////////////////////////////////////////////////////////////

# prompt ///////////////////////////////////////////////////////////////////////

frobulator.script "Setting up ${script#*-}"
echo

# variables ////////////////////////////////////////////////////////////////////

# defaults /////////////////////////////////////////////////////////////////////

list=(
	cpufreq-set
)

frobulator.require ${install_list[@]}

# functions ////////////////////////////////////////////////////////////////////

# set governor aliases

governors_list=(
	$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors)
)

for governor in "${!governors_list[@]}"
do
	cat <<- FILE >> /etc/bash.bashrc

	# governor - ${governors_list[governor]} #

	${governors_list[governor]}() {
		for ((n=0; n<$(grep -c processor /proc/cpuinfo); n++))
	do
			sudo cpufreq-set -c "\$n" -g ${governors_list[governor]}
		done
	}
	FILE

	cat <<- FILE > /usr/bin/${governors_list[governor]}
	#!/bin/bash

	# cpu governor (${governors_list[governor]}) #

	if [[ $(grep -c processor /proc/cpuinfo) ]]
	then
		cpu="$(grep -c processor /proc/cpuinfo)"
	fi

	for (( count=0; count<cpu; count++ ))
	do
		sudo cpufreq-set	\
			-c "\${count}"	\
			-g ${governors_list[governor]}
	done

	if [[ $(command -v notify-send) ]]
	then
		notify-send					\
			-i gnome-system-monitor	\
			"CPU governor set to ${governors_list[governor]}"
	FILE

	sudo chmod +x /usr/bin/${governors_list[governor]}
done

# write switch

cat <<- 'FILE' > /usr/bin/cpu-switch
#!/bin/bash

# cpu-switch #

cpu_count="$(grep -c processor /proc/cpuinfo)"

cpu_status="$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor)"

case "${governor}"
in
	powersave)
		governor="conservative"
	;;

	conservative)
		governor="ondemand"
	;;

	ondemand)
		governor="performance"
	;;

	performance)
		governor="powersave"
	;;
esac

for (( count=0; count<cpu_count; count++ ))
do
	sudo cpufreq-set	\
		-c "${count}"	\
		-g "${governor}"
done

if [[ $(command -v notify-send) ]]
then
	notify-send					\
		-i gnome-system-monitor \
		"CPU governor set to ${governors_list[governor]}"
FILE
FILE

# set permissions

sudo chmod +x /usr/bin/cpu-switch
