#!/bin/bash

# dependencies /////////////////////////////////////////////////////////////////

if [[ -z $(command -v frobulator) ]]
then
	if [[ $(id -u -n) = "root" ]]
	then
		SUDO_HOME=/root

		USER="${SUDO_USER}"

		HOME=/home/"${USER}"
	fi

	if [[ -z $(command -v curl) ]]
	then
		yes | apt-get install curl
	fi

	if [ ! -d "${HOME}"/.local/bin ]
	then
		mkdir -p "${HOME}"/.local/bin
	fi

	curl -s -L get.frbltr.app > "${HOME}"/.local/bin/frobulator

	chmod +x "${HOME}"/.local/bin/frobulator
fi

. "${HOME}"/.local/bin/frobulator

# script ///////////////////////////////////////////////////////////////////////

script=$(basename -- "${BASH_SOURCE[0]}")

# version //////////////////////////////////////////////////////////////////////

version="07-04-2023"

# usage ////////////////////////////////////////////////////////////////////////

while (($#))
do
	case "${1}"
	in
		-a|--activity)
			option="activity"
			activity_option="${2}"

			shift
		;;

		-n|--handle)
			option="handle"
			handle_option="${2}"

			shift
		;;

		-h|--help)
			echo
			echo -e "Usage: ${script} -a [Activity] | -n [Handle] | [OPTION]"
			echo
			echo -e "Options"
			echo
			echo -e "-a, --activity        Run native Android activities via Dextop environement defaults."
			echo
			echo -e "                      [ google-chrome ] | [ chrome ]"
			echo -e "                      [ google-mail ]   | [ gmail ]"
			echo -e "                      [ terminal ]"
			echo
			echo -e "-n, --handle          Run desktop environment handles through native Android applications."
			echo
			echo -e "                      [ email ]   | [ mail ]"
			echo -e "                      [ browser ] | [ link ] | [ web ]"
			echo -e "                      [ message ] | [ text ] | [ sms ]"
			echo
			echo -e "-h, --help            Show help and usage information."
			echo
			echo -e "'${script}' [ Version // ${version} ]"
			echo

			exit
		;;

		"")
			# handle empty argument:
			# use default values specified in script

			:
		;;

		*)
			echo
			echo -e "Usage: ${script} -a [Activity] | -n [Handle] | [OPTION]"
			echo
			echo -e "${script}: Unknown option '${1}'"
			echo -e "Type './${script} --help' for help and usage information."
			echo

			exit 1

		;;

		esac

	shift

done

# prompt ///////////////////////////////////////////////////////////////////////

frobulator.script "Setting up ${script#*-}"
echo

# variables ////////////////////////////////////////////////////////////////////

# activities

google_chrome="com.android.chrome/com.google.android.apps.chrome.Main"
google_mail="com.google.android.gm/.GmailActivity"
terminal="com.termux/com.termux.app.TermuxActivity"

# handles

email="mailto:"
link="https:"
message="sms:"

# functions ////////////////////////////////////////////////////////////////////

activity_intent () {

	activity="${1}"

	am start							\
		-n "${activity}"				> /dev/null 2>&1
	}

handle_intent () {

	handle="${1}"

	am start							\
		-a android.intent.action.VIEW	\
		-d "${handle}"					> /dev/null 2>&1
}

if [[ "${option}" = [aA][cC][tT][iI][vV][iI][tT][yY] ]]
then
	if [[ "${activity_option}" = "google-chrome" ]] || \
	   [[ "${activity_option}" = "chrome"        ]]
	then
		activity="${google_chrome}"

	elif [[ "${activity_option}" = "google-mail" ]] || \
		[[ "${activity_option}" = "gmail"        ]]
	then
		activity="${google_mail}"

	elif [[ "${activity_option}" = "terminal"    ]]
	then
		activity="${terminal}"

	else
		frobulator.err "Unrecognized activity option" "[ ${activity_option} ]"
		echo

		exit 1
	fi

	activity_intent "${activity}"

elif [[ "${option}" = [hH][aA][nN][dD][lL][eE] ]]
then
	if [[ "${handle_option}" = "email"     ]] || \
	   [[ "${handle_option}" = "mail"      ]]
	then
		handle="${email}"

	elif [[ "${handle_option}" = "browser" ]] || \
		[[ "${handle_option}" = "link"     ]] || \
		[[ "${handle_option}" = "web"      ]]
	then
		handle="${link}"

	elif [[ "${handle_option}" = "message" ]] || \
	     [[ "${handle_option}" = "text"    ]] || \
	     [[ "${handle_option}" = "sms"     ]]
	then
		handle="${message}"

	else
		frobulator.err "Unrecognized handle option" "[ ${handle_option} ]"
		echo

		exit 1
	fi

	handle_intent "${handle}"
fi
