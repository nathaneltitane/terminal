#!/bin/bash

# dependencies /////////////////////////////////////////////////////////////////

if [ -f "${HOME}"/.local/bin/frobulator ]
then
	. "${HOME}"/.local/bin/frobulator

	frobulator.fwd "Updating..."
	echo

	rm -r -f "${HOME}"/.local/bin/frobulator
else
	echo -n -e "[ â–· ] Updating..."
	echo
fi

if [[ -z $(command -v frobulator) ]]
then
	if [[ $(id -u -n) = "root" ]]
	then
		SUDO_HOME=/root

		USER="${SUDO_USER}"

		HOME=/home/"${USER}"
	fi

	if [[ -z $(command -v curl) ]]
	then
		yes | apt-get install curl
	fi

	if [ ! -d "${HOME}"/.local/bin ]
	then
		mkdir -p "${HOME}"/.local/bin
	fi

	curl -s -L get.frbltr.app > "${HOME}"/.local/bin/frobulator

	chmod +x "${HOME}"/.local/bin/frobulator
fi

. "${HOME}"/.local/bin/frobulator

clear

# configuration ////////////////////////////////////////////////////////////////

if [ -n "${TERMUX_VERSION}" ]
then
	frobulator.fwd "Setting up..."
	echo
fi

# session //////////////////////////////////////////////////////////////////////

if [ -z "${PS1}" ]
then
	return
fi

# options //////////////////////////////////////////////////////////////////////

shopt -s checkwinsize
shopt -s histappend
shopt -s histverify

HISTCONTROL=ignoreboth
HISTSIZE=1000
HISTFILESIZE=2000

# completion ///////////////////////////////////////////////////////////////////

if [ ! $(shopt -oq posix) ]
then
	if [ -f "${PREFIX}"/share/bash-completion/bash_completion ]
	then
		. "${PREFIX}"/share/bash-completion/bash_completion

	elif [ -f /usr/share/bash-completion/bash_completion ]
	then
		. /usr/share/bash-completion/bash_completion

	elif [ -f /etc/bash_completion ]
	then
		. /etc/bash_completion
	fi
fi

# user  ////////////////////////////////////////////////////////////////////////

if [ -n "${TERMUX_VERSION}" ]
then
	if [ -z "${USER}" ]
	then
		USER="termux"
	fi
fi

# colors ///////////////////////////////////////////////////////////////////////

colors_selection=(
	white="255"
	silver="248"
	grey="243"
	black="238"

	red="1"
	crimson="88"

	green="2"
	lime="28"

	yellow="11"
	orange="202"

	blue="4"
	navy="26"

	magenta="5"
	purple="53"

	fuschia="126"
	pink="200"

	aqua="6"
	teal="30"
)

if [ -z "$(command -v tput)" ]
then
	# handle color digit length for ansi fallback method

	for color in ${colors_selection[@]}
	do
		IFS='='

		read color_name color_value <<< "${color}"

		if [ ${#color_value} = 3 ]
		then
			color_value="${color_value}"
		fi

		if [ ${#color_value} = 2 ]
		then
			color_value="0${color_value}"
		fi

		if [ ${#color_value} = 1 ]
		then
			color_value="00${color_value}"
		fi

		IFS=''

		eval "${color_name}=${color_value}"

		unset color
	done

	# ansi color attributes

	if [[ -t 1 ]]
	then
		# monochromatic colors

		white=$(echo -e \\e\[38\;5\;"${white}"m)
		silver=$(echo -e \\e\[38\;5\;"${silver}"m)
		grey=$(echo -e \\e\[38\;5\;"${grey}"m)
		black=$(echo -e \\e\[38\;5\;"${black}"m)

		# standard colors by saturation offset

		red=$(echo -e \\e\[38\;5\;"${red}"m)
		crimson=$(echo -e \\e\[38\;5\;"${crimson}"m)

		green=$(echo -e \\e\[38\;5\;"${green}"m)
		lime=$(echo -e \\e\[38\;5\;"${lime}"m)

		yellow=$(echo -e \\e\[38\;5\;"${yellow}"m)
		orange=$(echo -e \\e\[38\;5\;"${orange}"m)

		blue=$(echo -e \\e\[38\;5\;"${blue}"m)
		navy=$(echo -e \\e\[38\;5\;"${navy}"m)

		magenta=$(echo -e \\e\[38\;5\;"${magenta}"m)
		purple=$(echo -e \\e\[38\;5\;"${purple}"m)

		aqua=$(echo -e \\e\[38\;5\;"${aqua}"m)
		teal=$(echo -e \\e\[38\;5\;"${teal}"m)

		# reset all attributes

		reset=$(echo -e \\e\[39m)
	fi
else
	# handle color selections

	for color in ${colors_selection[@]}
	do
		IFS='='

		read color_name color_value <<< "${color}"

		IFS=''

		eval "${color_name}=${color_value}"

		unset color
	done

	# 'tput' colors and attributes

	if [[ -t 1 ]]
	then
		# monochromatic colors

		white=$(tput setaf "${white}")
		silver=$(tput setaf "${silver}")
		grey=$(tput setaf "${grey}")
		black=$(tput setaf "${black}")

		# standard colors by saturation offset

		red=$(tput setaf "${red}")
		crimson=$(tput setaf "${crimson}")

		green=$(tput setaf "${green}")
		lime=$(tput setaf "${lime}")

		yellow=$(tput setaf "${yellow}")
		orange=$(tput setaf "${orange}")

		blue=$(tput setaf "${blue}")
		navy=$(tput setaf "${navy}")

		magenta=$(tput setaf "${magenta}")
		purple=$(tput setaf "${purple}")

		fuschia=$(tput setaf "${fuschia}")
		pink=$(tput setaf "${pink}")

		aqua=$(tput setaf "${aqua}")
		teal=$(tput setaf "${teal}")

		# reset all attributes

		reset=$(tput sgr 0)
	fi
fi

# prompt ///////////////////////////////////////////////////////////////////////

unset PS1

if [[ $(id -u -n) = "root" ]]
then
	prompt_color="${red}"

elif [[ $(pidof proot) ]]
then
	prompt_color="${magenta}"
else
	prompt_color="${green}"
fi

PS1+="${reset}[ "
PS1+="${prompt_color}${USER}"
PS1+="${reset} ]"

if [[ $(id -u -n) = "root" ]]
then
	PS1+="${white} >_ # ${reset}"
else
	PS1+="${white} >_ $ ${reset}"
fi

unset prompt_color

# aliases //////////////////////////////////////////////////////////////////////

if [ -d "${HOME}"/.bash-aliases ]
then
	for alias in "${HOME}"/.bash-aliases/*
	do
		if [ -x "${alias}" ]
		then
			. "${alias}"
		fi
	done
fi

if [ -f "${HOME}"/.bash_aliases ]
then
	. "${HOME}"/.bash_aliases
fi

# functions ////////////////////////////////////////////////////////////////////

if [ -d "${HOME}"/.bash-functions ]
then
	for function in "${HOME}"/.bash-functions/*
	do
		if [ -x "${function}" ]
		then
			. "${function}"
		fi
	done
fi

if [ -f "${HOME}"/.bash_functions ]
then
	. "${HOME}"/.bash_functions
fi

# login ////////////////////////////////////////////////////////////////////////

if [ -f "${HOME}"/.bash_login ]
then
	. "${HOME}"/.bash_login
fi

# system ///////////////////////////////////////////////////////////////////////

# kvm //////////////////////////////////////////////////////////////////////////

export LIBVIRT_DEFAULT_URI='qemu:///system'
