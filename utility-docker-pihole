#!/bin/bash

# dependencies /////////////////////////////////////////////////////////////////

if [[ -z $(command -v frobulator) ]]
then
	if [[ $(id -u -n) = "root" ]]
	then
		SUDO_HOME=/root

		USER="${SUDO_USER}"

		HOME=/home/"${USER}"
	fi

	if [[ -z $(command -v curl) ]]
	then
		yes | apt-get install curl
	fi

	if [ ! -d "${HOME}"/.local/bin ]
	then
		mkdir -p "${HOME}"/.local/bin
	fi

	curl -s -L get.frbltr.app > "${HOME}"/.local/bin/frobulator

	chmod +x "${HOME}"/.local/bin/frobulator
fi

. "${HOME}"/.local/bin/frobulator

# superuser ////////////////////////////////////////////////////////////////////

frobulator.escalate

# script ///////////////////////////////////////////////////////////////////////

script=$(basename -- "${BASH_SOURCE[0]}")

# version //////////////////////////////////////////////////////////////////////

version="01-10-2023"

# usage ////////////////////////////////////////////////////////////////////////

# prompt ///////////////////////////////////////////////////////////////////////

# variables ////////////////////////////////////////////////////////////////////

docker_image_name="pihole"
docker_image_source="${docker_image_name}"/"${docker_image_name}:latest"
docker_image_directory=/var/docker/"${docker_image_name}"
docker_image_address="192.168.86.13"

# defaults /////////////////////////////////////////////////////////////////////

list=(
	docker
	docker-clean
	docker-compose
	docker-registry
	docker.io
)

frobulator.require ${list[@]}

# functions ////////////////////////////////////////////////////////////////////

if [[ -d "${docker_image_directory}" ]]
then
	frobulator.log "docker stop ${docker_image_name}"
	frobulator.log "docker rm -f ${docker_image_name}"

	frobulator.delete "/var" "docker"

	frobulator.directory "${docker_image_directory}"
fi

docker run																					\
	--detach																				\
	--name "${docker_image_name}"															\
	--dns=127.0.0.1																			\
	--dns=1.1.1.1																			\
	--restart=unless-stopped																\
	--hostname "${docker_image_name}"														\
	-p 53:53/tcp																			\
	-p 53:53/udp																			\
	-p 80:80																				\
	-v "${docker_image_directory}/etc-${docker_image_name}:/etc/${docker_image_name}"		\
	-v "${docker_image_directory}/etc-dnsmasq.d:/etc/dnsmasq.d"								\
	-e tz="america/toronto"																	\
	-e virtual_host="${docker_image_name}"													\
	-e proxy_location="${docker_image_name}"												\
	-e ftlconf_local_ipv4="${docker_image_address}"											\
																							"${docker_image_source}"

	docker_image_inspect=$(docker inspect -f "{{json .State.Health}}" ${docker_image_name} | grep -i -o 'healthy')
	docker_image_password=$(docker logs ${docker_image_name} 2> /dev/null | grep 'password:' | cut -d ':' -f 2)

	if [ "${docker_image_inspect}" = "healthy" ]
	then
		echo -e "Password:${docker_image_password} -  http://${docker_image_address}/admin/"
	else
		sleep 3
		printf '.'
	fi
