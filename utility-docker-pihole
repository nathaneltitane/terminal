#!/bin/bash

docker_image_name="pihole"
docker_image_source="pihole/pihole:latest"
docker_image_directory=/var/docker/pihole
docker_image_address="192.168.86.13"

if [[ ! -d "$docker_image_directory" ]]
then
	mkdir -p "${docker_image_directory}"
fi

docker run																					\
	--detach																				\
	--name "${docker_image_name}"															\
	--dns=127.0.0.1																			\
	--dns=1.1.1.1																			\
	--restart=unless-stopped																\
	--hostname "${docker_image_name}"														\
	-p 53:53/tcp																			\
	-p 53:53/udp																			\
	-p 80:80																				\
	-e tz="america/toronto"																	\
	-v "${docker_image_directory}/etc-${docker_image_name}:/etc/${docker_image_name}"		\
	-v "${docker_image_directory}/etc-dnsmasq.d:/etc/dnsmasq.d"								\
	-e virtual_host="${docker_image_name}"													\
	-e proxy_location="${docker_image_name}"												\
	-e ftlconf_local_ipv4="${docker_image_address}"													\
																							"${docker_image_source}"

for i in $(seq 1 20)
do
	docker_image_inspect=$(docker inspect -f "{{json .State.Health}}" "${docker_image_name}")

	if [ "${docker_image_inspect}" == *healthy* ]
	then
		printf ' ok'
		echo -e "\n$(docker logs "${docker_image_name}" 2> /dev/null | grep 'password:') password for your pi-hole: http://${docker_image_address}/admin/"
		exit 0
		else
		sleep 3
		printf '.'
	fi

	if [ $i -eq 20 ]
	then
		echo -e "image timeout"

		exit 1

	fi
done
