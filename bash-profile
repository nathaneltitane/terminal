#!/bin/bash

# shell ////////////////////////////////////////////////////////////////////////

# loading order - login shell:

# system profile
# system bash configuration
# home bash configuration

# loading order - non-login shell:

# system bash configuration
# home bash configuration

# non-login shell requires 'bashrc'

# profile /////////////////////////////////////////////////////////////////////

if [ -n "${TERMUX_VERSION}" ]
then
	frobulator.fwd "Loading profile..."
	echo

	frobulator.clear
fi

# bash /////////////////////////////////////////////////////////////////////////

if [ -n "${BASH_VERSION}" ]
then

	# aliases //////////////////////////////////////////////////////////////////

	if [ -d "${HOME}"/.bash-aliases ]
	then
		for alias in "${HOME}"/.bash-aliases/*
		do
			if [ -x "${alias}" ]
			then
				. "${alias}"
			fi
		done
	fi

	if [ -f "${HOME}"/.bash_aliases ]
	then
		. "${HOME}"/.bash_aliases
	fi

	# functions ////////////////////////////////////////////////////////////////

	if [ -d "${HOME}"/.bash-functions ]
	then
		for function in "${HOME}"/.bash-functions/*
		do
			if [ -x "${function}" ]
			then
				. "${function}"
			fi
		done
	fi

	if [ -f "${HOME}"/.bash_functions ]
	then
		. "${HOME}"/.bash_functions
	fi
fi

# path /////////////////////////////////////////////////////////////////////////

if [ -d "${HOME}"/bin ]
then
	PATH="${HOME}/bin:${PATH}"
fi

if [ -d "${HOME}"/.local/bin ]
then
	PATH="${HOME}/.local/bin:${PATH}"
fi

if [ -d "${PREFIX}"/bin ]
then
	PATH="${PREFIX}/bin:${PATH}"
fi

# user  ////////////////////////////////////////////////////////////////////////

if [ -n "${TERMUX_VERSION}" ]
then
	if [ -z "${USER}" ]
	then
		USER="termux"
	fi
fi

# colors ///////////////////////////////////////////////////////////////////////

black="\001$(tput setaf 0)\002"
red="\001$(tput setaf 1)\002"
green="\001$(tput setaf 2)\002"
yellow="\001$(tput setaf 3)\002"
blue="\001$(tput setaf 4)\002"
magenta="\001$(tput setaf 5)\002"
cyan="\001$(tput setaf 6)\002"
white="\001$(tput setaf 7)\002"

reset="\001$(tput sgr 0)\002"

# prompt ///////////////////////////////////////////////////////////////////////

unset PS1

if [[ $(id -u -n) = "root" ]]
then
	prompt_color="${red}"

elif [[ $(pidof proot) ]]
then
	prompt_color="${magenta}"
else
	prompt_color="${green}"
fi

PS1+="${reset}[ "
PS1+="${prompt_color}${USER}"
PS1+="${reset} ]"

if [[ $(id -u -n) = "root" ]]
then
	PS1+="${white} >_ # ${reset}"
else
	PS1+="${white} >_ $ ${reset}"
fi

unset prompt_color

# dextop ///////////////////////////////////////////////////////////////////////

if [ -n "${TERMUX_VERSION}" ]
then

	# interface ////////////////////////////////////////////////////////////////

	if [[ $(pidof x11vnc)  ]]
	then
		frobulator.fwd "Session" "[ ${session_interface} ]"
		echo
	fi

	# welcome //////////////////////////////////////////////////////////////////

	if [[ $(cat "${HOME}"/.dextop/dextop-login) = "login" ]]
	then
		if [[ $(pidof proot) ]]
		then
			frobulator.fwd "Welcome to Dextop" "[ ${distribution_name} ]"
			echo

			ticker=$(cat "${HOME}"/.dextop/dextop-ticker)

			if [[ ${ticker} != 0 ]]
			then
				frobulator.inf "You have already logged in - display selection has been saved."
				frobulator.inf "Automatic session launch on shell login is enabled."
				echo
			else
				frobulator.wrn "This is your first login:"
				frobulator.wrn "Run 'container-session -o' to launch session [ ${session_interface} ]."
				echo

				if [ ! -f "${HOME}"/.vnc/selection ]
				then
					frobulator.wrn "No display selection has been saved:"
					frobulator.wrn "Automatic session launch on shell login not yet enabled."
					echo

					frobulato.inf "Select a display resolution for your device when prompted."
					echo
				fi
			fi

			ticker=$(( ${ticker} + 1 ))

			frobulator.write ${ticker} "${HOME}"/.dextop/dextop-ticker

		else
			frobulator.fwd "Welcome to Dextop" "[ Termux ]"
			echo

			frobulator.inf "Update utilities: 'dextop -u | dextop | shell | utility [Utility Name | all]'"
			echo

			frobulator.inf "Launch session: 'container-session -o | -u [User Name] | -a [Application]'"
			echo
		fi
	fi
fi
