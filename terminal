#!/bin/bash

# dependencies /////////////////////////////////////////////////////////////////

if [ -f "${HOME}"/.local/bin/frobulator ]
then
	rm -r -f "${HOME}"/.local/bin/frobulator
fi

if [[ -z $(command -v frobulator) ]]
then
	if [[ $(id -u -n) = "root" ]]
	then
		SUDO_HOME=/root

		USER="${SUDO_USER}"

		HOME=/home/"${USER}"
	fi

	if [[ -z $(command -v curl) ]]
	then
		yes | apt-get install curl
	fi

	if [ ! -d "${HOME}"/.local/bin ]
	then
		mkdir -p "${HOME}"/.local/bin
	fi

	if [[ $(id -u -n) = "root" ]]
	then
		chown "${USER}":"${USER}" "${HOME}"/.local/*

		chmod -R 777 "${HOME}"/.local/*
	fi

	curl -s -L get.frbltr.app > "${HOME}"/.local/bin/frobulator

	chmod +x "${HOME}"/.local/bin/frobulator
fi

. "${HOME}"/.local/bin/frobulator

# superuser ////////////////////////////////////////////////////////////////////

frobulator.escalate

# script ///////////////////////////////////////////////////////////////////////

script=$(basename -- "${BASH_SOURCE[0]}")

# version //////////////////////////////////////////////////////////////////////

version="02-20-2023"

# usage ////////////////////////////////////////////////////////////////////////

# prompt ///////////////////////////////////////////////////////////////////////

frobulator.script "Setting up ${script#*-}"
echo

# variables ////////////////////////////////////////////////////////////////////

storage_directory=/media

# defaults /////////////////////////////////////////////////////////////////////

# functions ////////////////////////////////////////////////////////////////////

# requirements /////////////////////////////////////////////////////////////////

list=(
	git
	hub
)

frobulator.assess ${list[@]}

list=()

# home /////////////////////////////////////////////////////////////////////////

frobulator.file "${HOME}" .hushlogin

# storage //////////////////////////////////////////////////////////////////////

list+=(
	external
	internal
)

if [ -d "/mnt/wsl*" ]
then
	frobulator.link /mnt/y /media/internal
	frobulator.link /mnt/z /media/external
else
	frobulator.directory /media ${list[@]}
fi

list=()

# git //////////////////////////////////////////////////////////////////////////

frobulator.inf "Setting up" "[ git ]"
echo

storage="${storage_directory}"/internal

if [ -d "${storage}" ]
then
	frobulator.link "${storage}"/Git "${HOME}" git-configuration .gitconfig

	chown "${USER}":"${USER}" "${storage}"/Git/git-configuration

	frobulator.link "${storage}"/Git "${HOME}" git-credentials   .git-credentials

	chown "${USER}":"${USER}" "${storage}"/Git/git-credentials
fi

# shell ////////////////////////////////////////////////////////////////////////

frobulator.inf "Setting up" "[ shell ]"
echo

frobulator.directory "${HOME}" .local/bin

list+=(
	bash-aliases
	bash-configuration
	bash-functions
	bash-login
	bash-logout
	bash-profile
)

frobulator.download get.trmnl.me "${HOME}"/.local/bin ${list[@]}

frobulator.link "${HOME}"/.local/bin "${HOME}"      bash-aliases       .bash_aliases
frobulator.link "${HOME}"/.local/bin "${HOME}"      bash-configuration .bashrc
frobulator.link "${HOME}"/.local/bin "${HOME}"      bash-configuration .bash_configuration
frobulator.link "${HOME}"/.local/bin "${HOME}"      bash-functions     .bash_functions
frobulator.link "${HOME}"/.local/bin "${HOME}"      bash-login         .bash_login
frobulator.link "${HOME}"/.local/bin "${HOME}"      bash-logout        .bash_logout
frobulator.link "${HOME}"/.local/bin "${HOME}"      bash-profile       .bash_profile

frobulator.link "${HOME}"/.local/bin "${SUDO_HOME}" bash-aliases       .bash_aliases
frobulator.link "${HOME}"/.local/bin "${SUDO_HOME}" bash-configuration .bashrc
frobulator.link "${HOME}"/.local/bin "${SUDO_HOME}" bash-configuration .bash_configuration
frobulator.link "${HOME}"/.local/bin "${SUDO_HOME}" bash-functions     .bash_functions
frobulator.link "${HOME}"/.local/bin "${SUDO_HOME}" bash-login         .bash_login
frobulator.link "${HOME}"/.local/bin "${SUDO_HOME}" bash-logout        .bash_logout
frobulator.link "${HOME}"/.local/bin "${SUDO_HOME}" bash-profile       .bash_profile

list=()
