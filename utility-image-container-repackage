#!/bin/bash

# dependencies /////////////////////////////////////////////////////////////////

if [[ -z $(command -v frobulator) ]]
then
	if [[ $(id -u -n) = "root" ]]
	then
		SUDO_HOME=/root

		USER="${SUDO_USER}"

		HOME=/home/"${USER}"
	fi

	if [[ -z $(command -v curl) ]]
	then
		yes | apt-get install curl
	fi

	if [ ! -d "${HOME}"/.local/bin ]
	then
		mkdir -p "${HOME}"/.local/bin
	fi

	curl -s -L get.frbltr.app > "${HOME}"/.local/bin/frobulator

	chmod +x "${HOME}"/.local/bin/frobulator
fi

. "${HOME}"/.local/bin/frobulator

# superuser ////////////////////////////////////////////////////////////////////

export self_arguments="${@}"

frobulator.escalate

# script ///////////////////////////////////////////////////////////////////////

script=$(basename -- "${BASH_SOURCE[0]}")

# version //////////////////////////////////////////////////////////////////////

version="03-15-2025"

# prompt ///////////////////////////////////////////////////////////////////////

frobulator.script "Setting up ${script#*-}"

# variables ////////////////////////////////////////////////////////////////////

platform="linux/aarch64"

# defaults /////////////////////////////////////////////////////////////////////

# functions ////////////////////////////////////////////////////////////////////

for distribution in "${!distributions[@]}"
do
    for version in ${distributions[${distribution}]}
    do
        case "${distribution}"
        in
            # ubuntu base image is already minimal

            ubuntu) image_tag="${distribution}:${version}" ;;

            debian) image_tag="${distribution}:${version}-slim" ;;

        esac

        docker pull --quiet --platform="${platform}" "${image_tag}"

        docker image save "${distribution}:${version}" | xz > "${distribution}-${version}-container.tar.xz"

        for archive_input in *container.tar.xz
        do
            archive_output="${archive_input/-container.tar.xz/.tar.xz}"

            temporary_directory=$(mktemp -d)

            echo "Extracting ${archive_input}..."

            tar									\
                --extract						\
                --file="${archive_input}"   	\
					--xz                        \
					--directory="${temporary_directory}"

            archive_layer=$(find "${temporary_directory}" -name "layer.tar")

            if [ -f "${archive_layer}" ]
            then
                frobulator.inf "Archiving ${archive_layer} from ${archive_input}"
                echo

                xz -c "${archive_layer}" > "${archive_output}" &

                frobulator.process "archive"

            else
                frobulator.err "Archive not found in extracted content" "[ ${archive_input}/layer.tar ]"
                echo
            fi

            rm -r -f "${temporary_directory}"

            rm -r -f "${archive_input}"
        done
    done
done

frobulator.scs "Done"
echo
